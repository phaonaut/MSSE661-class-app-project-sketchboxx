openapi: 3.0.3
info:
  title: Sketchboxx
  description: API manages Sketchboxx account registration, login, and account features.
  contact:
    name: Rodney
    email: rgordon06@regis.edu
  version: 0.1.0
servers:
  - url: https://localhost:3000/api/
paths:
  /auth/register:
    post:
      tags:
        - Account Auth
      summary: Creates Sketchboxx account.
      operationId: postRegister
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myuser
                email:
                  type: string
                  example: myemail@email.com
                passworkd:
                  type: string
                  example: mypass
      responses:
        '204':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: successful operation
  /auth/login:
    post:
      tags:
        - Account Auth
      summary: Logs user in.
      operationId: postLogin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myuser
                passworkd:
                  type: string
                  example: mypass
      responses:
        '204':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /account:
    get:
      tags:
        - Account Management
      summary: Gets account information for user.
      description: ''
      operationId: getAccount
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
            format: jwt
            example: "ej.afanfnagoangopangoangoafspo0ajfoj"
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username/password supplied
        
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com